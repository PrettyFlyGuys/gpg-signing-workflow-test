name: Sign Commits

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  sign-commits:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check if user is in team
        id: check_team
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN }}  # Needs 'read:org' scope
          script: |
            try {
              const response = await github.rest.teams.getMembershipForUserInOrg({
                org: context.repo.owner,
                team_slug: 'your-team-slug',  // Replace with your team slug
                username: context.payload.pull_request.user.login
              });
              return response.data.state === 'active';
            } catch (error) {
              if (error.status === 404) {
                console.log('User not in team');
                return false;
              }
              throw error;
            }
          result-encoding: string

      - name: Checkout PR branch
        if: steps.check_team.outputs.result == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Check for unsigned commits
        if: steps.check_team.outputs.result == 'true'
        id: check_unsigned
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          
          # Get list of commits in the PR
          commits=$(git rev-list origin/${{ github.event.pull_request.base.ref }}..${{ github.event.pull_request.head.sha }})
          
          has_unsigned=false
          
          for commit in $commits; do
            # Check if commit is signed (gpgsig field exists in commit object)
            if ! git cat-file commit $commit | grep -q "^gpgsig"; then
              echo "Found unsigned commit: $commit"
              has_unsigned=true
              break
            fi
          done
          
          echo "has_unsigned=$has_unsigned" >> $GITHUB_OUTPUT

      - name: Import GPG key
        if: steps.check_team.outputs.result == 'true' && steps.check_unsigned.outputs.has_unsigned == 'true'
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Configure Git
        if: steps.check_team.outputs.result == 'true' && steps.check_unsigned.outputs.has_unsigned == 'true'
        run: |
          git config user.name "${{ github.event.pull_request.user.login }}"
          git config user.email "${{ github.event.pull_request.user.email }}"
          git config commit.gpgsign true

      - name: Sign all unsigned commits
        if: steps.check_team.outputs.result == 'true' && steps.check_unsigned.outputs.has_unsigned == 'true'
        run: |
          git fetch origin ${{ github.event.pull_request.base.ref }}
          git rebase --exec 'git commit --amend --no-edit -n -S' origin/${{ github.event.pull_request.base.ref }}

      - name: Force push signed commits
        if: steps.check_team.outputs.result == 'true' && steps.check_unsigned.outputs.has_unsigned == 'true'
        run: |
          git push --force-with-lease origin ${{ github.event.pull_request.head.ref }}
